[tool.poetry]
name = "TradeBlocks"
version = "1.0.0"
description = "A comprehensive portfolio analysis application with modern UI"
authors = ["David Romeo <davidmromeo@gmail.com>"]
readme = "README.md"

packages = [
    { include = "app" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.32.0"}
dash = "^3.2.0"
dash-mantine-components = "^2.2.1"
plotly = "^5.24.1"
pandas = "^2.2.3"
numpy = "^1.26.4"
python-multipart = "^0.0.12"
pydantic = "^2.9.2"
python-dotenv = "^1.0.1"
requests = "^2.32.3"
aiofiles = "^24.1.0"
dash-iconify = "^0.1.2"
flask-cors = "^5.0.0"

[tool.poetry.extras]
analytics = ["scipy", "scikit-learn"]

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-asyncio = "^0.24.0"
black = "^24.8.0"
ruff = "^0.7.0"
mypy = "^1.11.0"
pre-commit = "^3.8.0"
ipython = "^8.27.0"
ipdb = "^0.13.13"
rich = "^13.7.1"
watchdog = "^5.0.3"
httpx = "^0.27.0"
scipy = "^1.14.1"
scikit-learn = "^1.5.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
ignore_missing_imports = true
exclude = [
    ".venv",
    "build",
    "dist",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
addopts = [
    "-ra",
    "--strict-markers",
    "--ignore=docs",
    "--ignore=build",
    "--ignore=dist",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
]

[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
